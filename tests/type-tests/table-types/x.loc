@type
load_table :: String -> Table
tid :: Table -> Table

@export
load_table:py as py
load_table:r  as r
load_table:sh as sh

@path
A :: tid:py . tid:r  . tid:sh . load_table:py . *Data
B :: tid:r  . tid:sh . tid:py . load_table:r  . *Data
C :: tid:sh . tid:py . tid:r  . load_table:sh . *Data

Data :: 'sample.tab'

@lang
load_table:py,tid:py :: py
load_table:r,tid:r   :: R
load_table:sh,tid:sh :: sh

@source py
def tid(x):
    return(x)

def load_table(x):
    with open(x, 'r') as f:
        return( [s.rstrip().split('\t') for s in f] )

@source R
tid <- function(x) { x }
load_table <- function(x){
    read.table(x, sep="\t", stringsAsFactors=FALSE)
}

@source sh
tid (){
    cat $1
}
load_table (){
    cat $1
}
