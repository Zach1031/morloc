run:
L0 :: L1 L2 --> D --> L3 --> F --> G
-------------
L1 :: A:1 --> B
L2 :: A:2 --> C
L3 :: E

compose:
F = h . g . f

alias:
A = senhalatha
B = huzurbazar
C = fredericksen
D = alonganduninterestingname
E = someexpensiveoperation
F = andanother
G = thelastfunctioninthisparticularpipeline

arg:
A:1 :: x=45, y="hi", z=[1,2,3]
A:2 :: x=46

cache:
__all__ --> memcache;
A,E --> datcache;
F --> nocache;
final --> datcache;

check:
__all__ --> true;
B,C --> va;
D --> vb, vc;
A B C --> vabc;

effect:
__all__ --> null;
A:1 B --> eab;
A:2 C --> print;
(D --> x) (F --> y --> z) (G --> x) --> Q --> final;
vabc --> log;

pack:
__all__ --> id

open:
__all__ --> id

fail:
__all__ --> null

pass:
__all__ --> call

loop:
with L1
 split A:1 on a=[1,2,3,4]
       B   on x=[1,2,5,9]
 merge mergefunction
-----------------------------

with L2
 split A:2 on b=['t','a','g']
 split C   on y=ys
 merge mergefunction
-----------------------------

with L3
 split cut_input_into_chunks
 merge merge_processed_chunks
