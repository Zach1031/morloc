export ceiling
export rand_uniform
export sayhi
export increment

source "R" (
    "runif" as rand_uniform
  , "ceiling"
);

source "R" from "foo.R" ( "sayhi" )

sayhi :: String -> String;

increment :: Int -> Int;

# impose a type signature on the imported function rand_uniform
rand_uniform :: n:Int, a:Num, b:Num -> xs:[c:Num] where (
    n > 0
  , len xs == n
  , c >= a
  , c <= b
);

# type signatures for ceiling (NOTE: adding constraints is optional)
ceiling :: [Num] -> [Int];

# A simple wrapper specializing the imported rand_uniform function
rand :: Int -> [Num];
rand n = rand_uniform n 0.0 1.0;
