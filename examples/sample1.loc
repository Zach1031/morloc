source "R" (
    "runif" as rand_uniform
  , "sample.int" as sample_index
  , "ceiling"
);

rand_uniform :: n:Int, a:Num, b:Num -> xs:[c:Num] where (
    n > 0
  , len xs == n
  , c >= a
  , c <= b
);

#' sample integers without replacement
sample_index
  :: n:Int      #' number of elements to sample
  ,  size:Int   #' maximum value
  -> xs:[x:Int] #' list of unique integers
  where (
      n >= 0
    , size >= n
    , len xs == n
    , x > 0
    , x <= size
    , len (uniq xs) == len xs
  )
;

# The vectorization of R makes these functions needlessly complicated
ceiling :: xs:[Num] -> ys:[Int] where (
    len xs == len ys 
  # , forall i (indices xs)(
  #       ys[i] - xs[i] >= 0
  #     , ys[i] - xs[i] <  1
  #   )
);

sample_index n size = ceiling (rand_uniform n 0 size);

rand n = rand_uniform n 0 1;
