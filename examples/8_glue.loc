@comment

Another usage of LOC is simply as a glue for connecting scripts of
different languages into an single script with a nice interface.

R has really good libraries for reading files from online. readr can read URLs
as easily as it can files. It will also automatically unzip them. So we could
write: `read_tsv(url, comment="#", col_names=FALSE)` and bypass the shell
function altogether.

@type
prepare :: Void -> File
analyze :: File -> Void

@path
analyze . prepare

@lang
analyze :: R
prepare :: sh


@source sh
prepare () {
    ncbi=ftp://ftp.ncbi.nih.gov/genomes
    spec=Apis_cerana
    gfffile=ref_ACSNU-2.0_top_level.gff3
    wget -O - $ncbi/$spec/GFF/$gfffile.gz | gunzip > $gfffile
    echo $gfffile
}


@source R
require(readr)
analyze <- function(f){
    d <- read_tsv(f, comment="#", col_names=FALSE)
    names(d) <- c(
        "seqid",
        "source",
        "type",
        "start",
        "stop",
        "score",
        "strand",
        "phase",
        "attr"
    )
    sink('result.txt')
    fit <- lm(start ~ stop, d)
    print(summary(fit))
    sink()
}
