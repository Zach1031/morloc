source "R" from "R-base.R" (
  # unpackers
    "unpackTable"
  , "unpackVector"
  , "unpackList"
  , "unpackMatrix"
  # packers
  , "packTable"
  , "packVector"
  , "packList"
  , "packMatrix"
)

relations {
    # R doesn't have scalars, generally everything is a vector
    R/Numeric   isa R/Vector .
    R/Integer   isa R/Vector .
    R/Character isa R/Vector .
    R/Logical   isa R/Vector .
    # R vectors are arrays of primitives that allow missing values
    R/Numeric   isa [?Number]  .
    R/Integer   isa [?Integer] .
    R/Character isa [?String]  .
    R/Logical   isa [?Boolean] .
}

# 'Structure' is a named, heterogenous list. The same as a structure in C.
packList
    :: packs Structure
    => R/List -> JSON

packVector
    :: packs [?Number]
    ,  packs [?String]
    ,  packs [?Boolean]
    => R/Vector -> JSON

packMatrix
    :: packs (Matrix ?Number  )
    ,  packs (Matrix ?String  )
    ,  packs (Matrix ?Boolean )
    => R/Matrix -> JSON

packDataFrame :: (packs Table) => R/DataFrame -> JSON
packDataTable :: (packs Table) => R/DataTable -> JSON

unpackNumeric :: unpacks [?Number]
               , unpacks [ Number] => JSON -> R/Numeric

unpackCharacter :: unpacks [?String]
                ,  unpacks [ String] => JSON -> R/Character

unpackLogical :: unpacks [?Boolean]
              ,  unpacks [ Boolean] => JSON -> R/Logical

unpackMatrix
  :: unpacks (Matrix ?Number  )
  ,  unpacks (Matrix ?String  )
  ,  unpacks (Matrix ?Boolean )
  ,  unpacks (Matrix  Number  )
  ,  unpacks (Matrix  String  )
  ,  unpacks (Matrix  Boolean )
  => JSON -> R/Matrix;

unpackDataFrame :: (unpacks Table) => JSON -> R/DataFrame;
unpackDataTable :: (unpacks Table) => JSON -> R/DataTable;
