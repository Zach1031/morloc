State 17 conflicts: 2 shift/reduce
State 19 conflicts: 2 shift/reduce


Grammar

    0 $accept: input $end

    1 input: exp
    2      | input exp

    3 exp: COMPOSITION VARIABLE '=' composition
    4    | EFFECT SELECTION '=' VARIABLE

    5 composition: VARIABLE
    6            | '(' composition ')'
    7            | composition composition
    8            | composition '.' composition


Terminals, with rules where they appear

$end (0) 0
'(' (40) 6
')' (41) 6
'.' (46) 8
'=' (61) 3 4
error (256)
VARIABLE (258) 3 4 5
SELECTION (259) 4
EFFECT (260) 4
COMPOSITION (261) 3
CONCAT (262)


Nonterminals, with rules where they appear

$accept (12)
    on left: 0
input (13)
    on left: 1 2, on right: 0 2
exp (14)
    on left: 3 4, on right: 1 2
composition (15)
    on left: 5 6 7 8, on right: 3 6 7 8


State 0

    0 $accept: . input $end
    1 input: . exp
    2      | . input exp
    3 exp: . COMPOSITION VARIABLE '=' composition
    4    | . EFFECT SELECTION '=' VARIABLE

    EFFECT       shift, and go to state 1
    COMPOSITION  shift, and go to state 2

    input  go to state 3
    exp    go to state 4


State 1

    4 exp: EFFECT . SELECTION '=' VARIABLE

    SELECTION  shift, and go to state 5


State 2

    3 exp: COMPOSITION . VARIABLE '=' composition

    VARIABLE  shift, and go to state 6


State 3

    0 $accept: input . $end
    2 input: input . exp
    3 exp: . COMPOSITION VARIABLE '=' composition
    4    | . EFFECT SELECTION '=' VARIABLE

    $end         shift, and go to state 7
    EFFECT       shift, and go to state 1
    COMPOSITION  shift, and go to state 2

    exp  go to state 8


State 4

    1 input: exp .

    $default  reduce using rule 1 (input)


State 5

    4 exp: EFFECT SELECTION . '=' VARIABLE

    '='  shift, and go to state 9


State 6

    3 exp: COMPOSITION VARIABLE . '=' composition

    '='  shift, and go to state 10


State 7

    0 $accept: input $end .

    $default  accept


State 8

    2 input: input exp .

    $default  reduce using rule 2 (input)


State 9

    4 exp: EFFECT SELECTION '=' . VARIABLE

    VARIABLE  shift, and go to state 11


State 10

    3 exp: COMPOSITION VARIABLE '=' . composition
    5 composition: . VARIABLE
    6            | . '(' composition ')'
    7            | . composition composition
    8            | . composition '.' composition

    VARIABLE  shift, and go to state 12
    '('       shift, and go to state 13

    composition  go to state 14


State 11

    4 exp: EFFECT SELECTION '=' VARIABLE .

    $default  reduce using rule 4 (exp)


State 12

    5 composition: VARIABLE .

    $default  reduce using rule 5 (composition)


State 13

    5 composition: . VARIABLE
    6            | . '(' composition ')'
    6            | '(' . composition ')'
    7            | . composition composition
    8            | . composition '.' composition

    VARIABLE  shift, and go to state 12
    '('       shift, and go to state 13

    composition  go to state 15


State 14

    3 exp: COMPOSITION VARIABLE '=' composition .  [$end, EFFECT, COMPOSITION]
    5 composition: . VARIABLE
    6            | . '(' composition ')'
    7            | . composition composition
    7            | composition . composition
    8            | . composition '.' composition
    8            | composition . '.' composition

    VARIABLE  shift, and go to state 12
    '.'       shift, and go to state 16
    '('       shift, and go to state 13

    $default  reduce using rule 3 (exp)

    composition  go to state 17


State 15

    5 composition: . VARIABLE
    6            | . '(' composition ')'
    6            | '(' composition . ')'
    7            | . composition composition
    7            | composition . composition
    8            | . composition '.' composition
    8            | composition . '.' composition

    VARIABLE  shift, and go to state 12
    '.'       shift, and go to state 16
    '('       shift, and go to state 13
    ')'       shift, and go to state 18

    composition  go to state 17


State 16

    5 composition: . VARIABLE
    6            | . '(' composition ')'
    7            | . composition composition
    8            | . composition '.' composition
    8            | composition '.' . composition

    VARIABLE  shift, and go to state 12
    '('       shift, and go to state 13

    composition  go to state 19


State 17

    5 composition: . VARIABLE
    6            | . '(' composition ')'
    7            | . composition composition
    7            | composition . composition
    7            | composition composition .  [$end, VARIABLE, EFFECT, COMPOSITION, '.', '(', ')']
    8            | . composition '.' composition
    8            | composition . '.' composition

    VARIABLE  shift, and go to state 12
    '('       shift, and go to state 13

    VARIABLE  [reduce using rule 7 (composition)]
    '('       [reduce using rule 7 (composition)]
    $default  reduce using rule 7 (composition)

    composition  go to state 17

    Conflict between rule 7 and token '.' resolved as reduce ('.' < CONCAT).


State 18

    6 composition: '(' composition ')' .

    $default  reduce using rule 6 (composition)


State 19

    5 composition: . VARIABLE
    6            | . '(' composition ')'
    7            | . composition composition
    7            | composition . composition
    8            | . composition '.' composition
    8            | composition . '.' composition
    8            | composition '.' composition .  [$end, VARIABLE, EFFECT, COMPOSITION, '.', '(', ')']

    VARIABLE  shift, and go to state 12
    '('       shift, and go to state 13

    VARIABLE  [reduce using rule 8 (composition)]
    '('       [reduce using rule 8 (composition)]
    $default  reduce using rule 8 (composition)

    composition  go to state 17

    Conflict between rule 8 and token '.' resolved as reduce (%left '.').
