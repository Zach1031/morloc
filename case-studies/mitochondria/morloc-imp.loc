@type
# Functions of *Main
aggregate    :: Int -> Int -> Table
ref2name     :: File -> Table
uncomment    :: Table -> Table
tblastn      :: File -> File -> Table
makeblastdb  :: File -> File
fastq2fasta  :: File -> File
cat          :: [File] -> File
gunzip       :: File -> File
wget         :: File -> File
get_children :: Int -> File -> File

# Functions of *faa
fasta_grep         :: [String] -> File -> File
taxid2sciname      :: Void -> Table
get_taxid_children :: Int -> Table

@path sh
main ::
    null .
    aggregate .
    2 # name
    8 # bitscore
    merge .
    1 1
    ( ref2name . *faa )
    ( uncomment . tblastn . *faa ( makeblastdb . fastaq2fasta . cat . *db ) )

faa ::
  fasta_grep .
    ( cut . `-f2` merge . 1 1 taxid2sciname (get_taxid_children . *focal_taxid) )
    ( gunzip . wget . *mitochondria_proteins )

db :: "reads.fastq"
focal_taxid :: 6656 # The arthropoda phylum taxid id
mitochondria_proteins :: 'ftp://ftp.ncbi.nlm.nih.gov/refseq/release/mitochondrion/mitochondrion.1.protein.faa.gz'

@before
null :: setup_litade
null :: setup_smof

@after
null :: hist . nthcol . 2 <aggregate>

@arg
tblastn ::
    -task tblastn-fast
    -evalue 0.001
    -num_threads 8
    -max_target_seqs 1000000000
    -outfmt '7 qseqid sseqid qlen slen qstart qstop sstart sstop bitscore pident positive evalue'

@include
core/atomic
core/table

@alias
tblastn :: morloc_tblastn
makeblastdb :: morloc_makeblastdb

@source sh

setup_litade () {
    git clone https://github.com/arendsee/litade
    cd litade && ./setup.sh && cd ..
}

setup_smof () {
    git clone https://github.com/arendsee/smof
}

get_taxid_children () {
    taxid=$1
    perl litade.pl $taxid | cut -f2
}

taxid2sciname () {
    # Get the taxonomy dump
    wget -O - ftp://ftp.ncbi.nih.gov/pub/taxonomy/taxdmp.zip |
    unzip -p taxdmp.zip names.dmp |
    # Build a map from Taxon Id to Scientific name
    sed 's/[\t ]*|[\t ]*/\t/g' names.dmp |
        awk '
            BEGIN{FS="\t"; OFS="\t"}
            /scientific name/ {print $1,$2}
        '
}

fasta_grep () {
    # Extract the protein sequence of all arthropods
    smof grep -w '\[([^\]]+)\]' -f $1 $2
}

fastq2fasta () {
    awk  'NR % 4 == 1 {print ">" $0} NR % 4 == 2 {print}' $1
}

morloc_makeblastdb () {
    makeblastdb -in $1 -dbtype nucl -out blastdb/foo -title foo
    echo blastdb/foo
}

morloc_tblastn () {
    query=${@: -2:1}
    db=${@: -1:1}
    options=${@: 1: ${#@} - 2}
    tblastn $options -query $query -db $db 
}

ref2name () {
  sed -nr 's/>([^ ]+).*\[(.*)\]/\1\t\2/p' $1 | tr ' ' '_'
}

aggregate () {
    awk -v SCORE=$1 -v NAME=$2 '
        BEGIN{ FS="\t" ; OFS="\t" }
        $SCORE > a[$NAME] { a[$NAME] = $SCORE }
        END { for (k in a){ print k, a[k] } }
    ' $3
}
