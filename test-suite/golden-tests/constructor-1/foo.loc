import pybase ()

source py from "more.py" ("dict" as packDict, "unpackDict", "lookup");

export foo

-- defines the json format for the type
packMap :: pack => [(key,val)] -> Map key val;
-- defines the constructor
packMap py :: pack => [(key,val)] -> "dict" key val;
packMap py = packDict;

-- defines how to unpack an object into something that can be automatically
-- serialized to JSON
unpackMap :: unpack => Map key val -> [(key,val)];
-- defines the "unconstructor" (not to be confused with a destructor), but
-- rather a function that returs whatever went in to constructing it.
unpackMap py :: unpack => "dict" key val -> [(key,val)];
unpackMap py = unpackDict

lookup :: key -> Map key val -> val;
lookup py :: key -> Map key val -> val;

foo :: Str -> Map Str Int -> Int;
foo k xs = lookup k xs
